name: Build in GA and Deploy in CF
on:
  push:
    branches:
      - main
    paths:
      - "site/content/**"
      - "site/config/**"
      - "site/components/**"
      - "site/layouts/**"
      - "site/pages/**"
      - "package.json"
      - "package-lock.json"
  workflow_dispatch:
env:
  PRODUCTION_BUILD_PATH: dist/production
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      algorithms: ${{ steps.filter.outputs.algorithms }}
      uiux: ${{ steps.filter.outputs.uiux }}
      configs: ${{ steps.filter.outputs.configs }}
      deps: ${{ steps.filter.outputs.deps }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            pages:
              - 'site/pages/**'
            styles:
              - 'site/styles/**'
            global:
              - 'site/global.css'
            algorithms:
              - 'site/content/algorithms/**'
              - 'site/pages/algorithms/**'
              - 'site/components/**/!(uiux-*).astro'
            uiux:
              - 'site/content/uiux/**'
              - 'site/pages/uiux/**'
              - 'site/components/**/uiux-*.astro'
            configs:
              - 'site/config/**'
              - 'site/layouts/**'
            deps:
              - 'package.json'
              - 'package-lock.json'  
  ga-build:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.algorithms == 'true' || needs.detect-changes.outputs.uiux == 'true' || needs.detect-changes.outputs.configs == 'true' || needs.detect-changes.outputs.deps == 'true' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build production
        run: |
          mkdir -p ${{ env.PRODUCTION_BUILD_PATH }}
          echo "Setting ${{env.PRODUCTION_BUILD_PATH}}"
          ls
          echo "[BUILD]: PRD"
          npm run build:prod
          echo "[BUILD]: DONE. Scanning dist"
          ls -R $PRODUCTION_BUILD_PATH

      - name: Debug Artifact Path
        run: |
          echo "Checking production build path..."
          ls -R ${{ env.PRODUCTION_BUILD_PATH }}

      - name: Upload build artifacts - FINAL BLD STEP
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: ${{ env.PRODUCTION_BUILD_PATH }}

  push-prd-deploy-cf:
    needs: ga-build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout to production
        uses: actions/checkout@v4
        with:
          ref: production
          fetch-depth: 0

      - name: Check artifact before download
        id: check-artifact
        run: |
          if [ -d "${{ env.PRODUCTION_BUILD_PATH }}" ]; then
            echo "Artifact directory exists."
          else
            echo "[FAILED]:Artifact directory does not exist. Creating mkdir -p PRODUCTION_BUILD_PATH"
            mkdir -p ${{ env.PRODUCTION_BUILD_PATH }}
          fi

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: ${{ env.PRODUCTION_BUILD_PATH }}

      - name: Verify downloaded artifacts
        run: |
          ls -la ${{ env.PRODUCTION_BUILD_PATH }}
          if [ -z "$(ls -A ${{ env.PRODUCTION_BUILD_PATH }})" ]; then
            echo "WARN: build directory is empty. Creating new"
            mkdir -p ${{ env.PRODUCTION_BUILD_PATH }}
            echo "dist/production" > ${{ env.PRODUCTION_BUILD_PATH }}/placeholder.txt
          fi

      - name: Commit and push to production [FIN]
        run: |
          git branch --show-current
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.PRODUCTION_BUILD_PATH }}
          git commit -m "PRD: update production build from main branch" 
          git push origin production
          echo "[DEPLOY]: GA Jobs Done"
        env:
          ACTIONS_PAT: ${{ secrets.ACTIONS_PAT }}
