---
import { CollectionEntry, getCollection } from "astro:content";

import {
  FolderGit2,
  Component as ComponentIcon,
  GitCommitVertical,
  GitFork,
  Cuboid as UIUXItemIcon,
  CurlyBraces as CodeIcon,
} from "lucide-astro";

import SidebarTree from "@site-ui/sidebar-tree.astro";
import { getEnv } from "@site/utils";
import { Routes } from "@site-types/routes";

const currentPathname = Astro.url.pathname;

//  콘텐츠 가져오기
const { isPrd, isAlgo, isUIUX } = getEnv();

const collections = await Promise.all([
  isAlgo || isPrd
    ? getCollection("algorithms")
    : ([] as CollectionEntry<"algorithms">),
  isUIUX || isPrd ? getCollection("uiux") : ([] as unknown[]),
]);

const [algoFolders, uiuxFolders] = collections.map((collection) =>
  groupContentByFolder(collection),
);

function groupContentByFolder(posts) {
  if (posts.length === 0) {
    return [];
  }
  // 폴더별 게시물 그룹화
  const folderGroups = {};

  posts.forEach((post) => {
    const pathParts = post.id.split("/");
    if (pathParts.length > 1) {
      const folder = pathParts[0]; // 첫 번째 부분은 폴더 이름

      if (!folderGroups[folder]) {
        folderGroups[folder] = [];
      }

      folderGroups[folder].push({
        id: post.id,
        title: post.data.title || post.id,
      });
    }
  });

  return Object.entries(folderGroups);
}
---

<aside
  class:list={[
    "hidden max-w-64 grow p-4 md:block",
    "text-primary border-border border-r",
  ]}
>
  <nav class="flex max-h-dvh flex-col gap-y-4 overflow-y-auto">
    <!-- Algorithms 섹션 -->

    <SidebarTree
      folders={algoFolders}
      currentPath={currentPathname}
      indexPath={Routes.algorithms}
    >
      <FolderGit2 class="h-5 w-5" slot="hero-icon" />
      <GitFork class="h-5 w-5" slot="index-icon" />
      <GitCommitVertical
        class="text-secondary before:content- inline h-5 w-5 font-thin"
        slot="folder-icon"
      />
      <CodeIcon class="inline h-4 w-4" slot="file-icon" />
    </SidebarTree>

    <!-- UI/UX 섹션 -->
    <SidebarTree
      folders={uiuxFolders}
      currentPath={currentPathname}
      indexPath={Routes.uiux}
    >
      <ComponentIcon class="h-5 w-5" slot="hero-icon" />
      <GitFork class="inline h-5 w-5" slot="index-icon" />
      <GitCommitVertical
        class="text-secondary before:content- inline h-5 w-5 font-thin"
        slot="folder-icon"
      />
      <UIUXItemIcon class="h-4 w-4" slot="file-icon" />
    </SidebarTree>
  </nav>
</aside>
