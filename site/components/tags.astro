---
import type { SearchParam } from "site/types/query";
import type { RouteType, SubRouteType } from "site/types/routes";

interface Props {
  tags: Record<string, string>;
  path: RouteType;
  size?: "sm" | "base";
  itemId?: string;
}

const { tags, size = "base", path } = Astro.props;
const arrTags = Object.entries(tags)
  .filter(([key, val]) => !!key && !!val)
  .filter(
    ([key, val], index, self) =>
      self.findIndex((pair) => pair[1] === val) === index,
  );
---

<div
  id="tags-container"
  class={`flex flex-wrap items-center mt-1 mb-2 gap-x-4 ${size === "sm" ? "text-xs" : "text-sm"}`}
>
  {
    arrTags.map(([key, val]) =>
      !!val
        ? () => {
            return (
              <a
                id={`${key}=${val}`}
                class={`tag-button ${key} ${val} cursor-pointer rounded-sm ${size === "sm" ? "px-1 py-0" : "px-2 py-1"} `}
                aria-description={`link to tag: ${key}`}
                href={`/${path}?${key}=${val}`}
              >
                {val}
              </a>
            );
          }
        : null,
    )
  }
</div>
