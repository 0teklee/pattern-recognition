---
import {
  ChevronsUpDown as ExpandIcon,
  ChevronsDownUp as CollapseIcon,
} from "lucide-astro";
import type { RouteKeyType } from "@site-types/routes";

interface Props {
  indexPath: RouteKeyType;
  folders: [string, unknown][];
}

const { indexPath, folders } = Astro.props;
const title = indexPath.slice(1);

const animateIcons = [
  "absolute top-0 right-0",
  "transition-transform duration-300",
];

const animateFolders = [
  "transition-all duration-300",
  "opacity-0",
  "scale-y-0",
];
---

<!--Refactor : Make this script declarative while keeping persist transition-->
<script>
  document.addEventListener("astro:page-load", (e) => {
    const item = document.getElementById(
      decodeURIComponent(e.target.location.pathname),
    );

    item?.classList.add("text-theme");
  });

  document.addEventListener("astro:before-swap", (e) => {
    const item = document.getElementById(decodeURIComponent(e.from.pathname));
    item?.classList.remove("text-theme");
  });
</script>

<details class="group" transition:persist>
  <summary
    class:list={[
      "relative",
      "flex items-center justify-between",
      "hover:text-secondary font-semibold",
      "cursor-pointer transition-all duration-500",
      "capitalize",
    ]}
  >
    <slot name="hero-icon" />
    <span class="uppercase">{title}</span>
    <i>
      <ExpandIcon
        class:list={[
          ...animateIcons,
          "opacity-100 group-open:rotate-90 group-open:opacity-0",
        ]}
      />
      <CollapseIcon
        class:list={[
          ...animateIcons,
          "-rotate-90 opacity-0 group-open:rotate-0 group-open:opacity-100",
        ]}
      />
    </i>
  </summary>
  <!--Info 하위 경로, Index 시작-->
  <div
    class:list={[
      ...animateFolders,
      "group-open:opacity-100",
      "group-open:scale-y-100",
    ]}
  >
    <div class="mt-2 flex flex-col gap-1 pl-4">
      <a
        href={indexPath}
        class:list={[
          "hover:text-secondary",
          "mb-1 flex cursor-pointer items-center gap-3 font-medium",
        ]}
      >
        <slot name="index-icon" class="inline-block h-4 w-4" />
        Index
      </a>
      <!--Info 모든 하위 경로, {folder} 시작-->
      {
        folders.map(([folder, files]) => {
          return (
            <details class:list={["relative", "group/folder"]}>
              <summary
                class:list={[
                  "text-sm",
                  "hover:text-secondary capitalize",
                  "group-open/folder:**:text-theme cursor-pointer",
                ]}
              >
                <slot name="folder-icon" />
                <span>{folder}</span>
                <i class="align-middle">
                  <ExpandIcon
                    class:list={[
                      "absolute top-0 right-0",
                      "stroke-1",
                      "transition-all duration-300",
                      "opacity-100 group-open/folder:opacity-0",
                      "rotate-0 group-open/folder:rotate-90",
                    ]}
                  />
                  <CollapseIcon
                    class:list={[
                      "absolute top-0 right-0",
                      "stroke-1",
                      "transition-all duration-300",
                      "opacity-0 group-open/folder:opacity-100",
                      "-rotate-90 group-open/folder:rotate-0",
                    ]}
                  />
                </i>
              </summary>
              <div
                class:list={[
                  "grid gap-y-1",
                  "py-1",
                  "indent-1 text-sm transition-all duration-300",
                  "opacity-0 group-open/folder:opacity-100",
                  "scale-y-0 group-open/folder:scale-y-100",
                ]}
              >
                {files.map((file) => {
                  const fileLink = `${indexPath}/${file.id}`;
                  return (
                    <a
                      id={fileLink}
                      href={fileLink}
                      class:list={[
                        "hover:text-theme font-light whitespace-pre-wrap",
                        files.length > 3 ? "text-xs" : "text-sm",
                      ]}
                    >
                      <i class:list={["mr-1 inline-block align-middle"]}>
                        <slot name="file-icon" />
                      </i>
                      <span>{file.title}</span>
                    </a>
                  );
                })}
              </div>
            </details>
          );
        })
      }
    </div>
  </div>
</details>
